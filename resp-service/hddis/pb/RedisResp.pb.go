// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: RedisResp.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 表示一个Redis值，可以是多种数据类型
type RedisValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*RedisValue_StringValue
	//	*RedisValue_ListValue
	//	*RedisValue_HashValue
	//	*RedisValue_SetValue
	//	*RedisValue_SortedSetValue
	//	*RedisValue_StreamValue
	//	*RedisValue_NullValue
	//	*RedisValue_OkValue
	//	*RedisValue_IntegerValue
	//	*RedisValue_DoubleValue
	//	*RedisValue_ErrorValue
	Value         isRedisValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisValue) Reset() {
	*x = RedisValue{}
	mi := &file_RedisResp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisValue) ProtoMessage() {}

func (x *RedisValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisValue.ProtoReflect.Descriptor instead.
func (*RedisValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{0}
}

func (x *RedisValue) GetValue() isRedisValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RedisValue) GetStringValue() *StringValue {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_StringValue); ok {
			return x.StringValue
		}
	}
	return nil
}

func (x *RedisValue) GetListValue() *ListValue {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_ListValue); ok {
			return x.ListValue
		}
	}
	return nil
}

func (x *RedisValue) GetHashValue() *HashValue {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_HashValue); ok {
			return x.HashValue
		}
	}
	return nil
}

func (x *RedisValue) GetSetValue() *SetValue {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_SetValue); ok {
			return x.SetValue
		}
	}
	return nil
}

func (x *RedisValue) GetSortedSetValue() *SortedSetValue {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_SortedSetValue); ok {
			return x.SortedSetValue
		}
	}
	return nil
}

func (x *RedisValue) GetStreamValue() *StreamValue {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_StreamValue); ok {
			return x.StreamValue
		}
	}
	return nil
}

func (x *RedisValue) GetNullValue() bool {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_NullValue); ok {
			return x.NullValue
		}
	}
	return false
}

func (x *RedisValue) GetOkValue() bool {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_OkValue); ok {
			return x.OkValue
		}
	}
	return false
}

func (x *RedisValue) GetIntegerValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_IntegerValue); ok {
			return x.IntegerValue
		}
	}
	return 0
}

func (x *RedisValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *RedisValue) GetErrorValue() *ErrorValue {
	if x != nil {
		if x, ok := x.Value.(*RedisValue_ErrorValue); ok {
			return x.ErrorValue
		}
	}
	return nil
}

type isRedisValue_Value interface {
	isRedisValue_Value()
}

type RedisValue_StringValue struct {
	StringValue *StringValue `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type RedisValue_ListValue struct {
	ListValue *ListValue `protobuf:"bytes,2,opt,name=list_value,json=listValue,proto3,oneof"`
}

type RedisValue_HashValue struct {
	HashValue *HashValue `protobuf:"bytes,3,opt,name=hash_value,json=hashValue,proto3,oneof"`
}

type RedisValue_SetValue struct {
	SetValue *SetValue `protobuf:"bytes,4,opt,name=set_value,json=setValue,proto3,oneof"`
}

type RedisValue_SortedSetValue struct {
	SortedSetValue *SortedSetValue `protobuf:"bytes,5,opt,name=sorted_set_value,json=sortedSetValue,proto3,oneof"`
}

type RedisValue_StreamValue struct {
	StreamValue *StreamValue `protobuf:"bytes,6,opt,name=stream_value,json=streamValue,proto3,oneof"`
}

type RedisValue_NullValue struct {
	// 特殊类型
	NullValue bool `protobuf:"varint,7,opt,name=null_value,json=nullValue,proto3,oneof"` // 表示Redis的nil
}

type RedisValue_OkValue struct {
	OkValue bool `protobuf:"varint,8,opt,name=ok_value,json=okValue,proto3,oneof"` // 表示简单的"OK"响应
}

type RedisValue_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,9,opt,name=integer_value,json=integerValue,proto3,oneof"` // 表示整数响应
}

type RedisValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,10,opt,name=double_value,json=doubleValue,proto3,oneof"` // 表示双精度浮点数
}

type RedisValue_ErrorValue struct {
	ErrorValue *ErrorValue `protobuf:"bytes,11,opt,name=error_value,json=errorValue,proto3,oneof"` // 表示错误响应
}

func (*RedisValue_StringValue) isRedisValue_Value() {}

func (*RedisValue_ListValue) isRedisValue_Value() {}

func (*RedisValue_HashValue) isRedisValue_Value() {}

func (*RedisValue_SetValue) isRedisValue_Value() {}

func (*RedisValue_SortedSetValue) isRedisValue_Value() {}

func (*RedisValue_StreamValue) isRedisValue_Value() {}

func (*RedisValue_NullValue) isRedisValue_Value() {}

func (*RedisValue_OkValue) isRedisValue_Value() {}

func (*RedisValue_IntegerValue) isRedisValue_Value() {}

func (*RedisValue_DoubleValue) isRedisValue_Value() {}

func (*RedisValue_ErrorValue) isRedisValue_Value() {}

// 字符串值
type StringValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Value string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// 可选：TTL（生存时间，以毫秒为单位）
	TtlMs         int64 `protobuf:"varint,2,opt,name=ttl_ms,json=ttlMs,proto3" json:"ttl_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	mi := &file_RedisResp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{1}
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringValue) GetTtlMs() int64 {
	if x != nil {
		return x.TtlMs
	}
	return 0
}

// 列表值
type ListValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListValue) Reset() {
	*x = ListValue{}
	mi := &file_RedisResp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValue) ProtoMessage() {}

func (x *ListValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValue.ProtoReflect.Descriptor instead.
func (*ListValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{2}
}

func (x *ListValue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// 哈希值
type HashValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        map[string]string      `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HashValue) Reset() {
	*x = HashValue{}
	mi := &file_RedisResp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashValue) ProtoMessage() {}

func (x *HashValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashValue.ProtoReflect.Descriptor instead.
func (*HashValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{3}
}

func (x *HashValue) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// 集合值
type SetValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Members       []string               `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetValue) Reset() {
	*x = SetValue{}
	mi := &file_RedisResp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetValue) ProtoMessage() {}

func (x *SetValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetValue.ProtoReflect.Descriptor instead.
func (*SetValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{4}
}

func (x *SetValue) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

// 有序集合值
type SortedSetValue struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Members       []*SortedSetValue_ScoreMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortedSetValue) Reset() {
	*x = SortedSetValue{}
	mi := &file_RedisResp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortedSetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortedSetValue) ProtoMessage() {}

func (x *SortedSetValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortedSetValue.ProtoReflect.Descriptor instead.
func (*SortedSetValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{5}
}

func (x *SortedSetValue) GetMembers() []*SortedSetValue_ScoreMember {
	if x != nil {
		return x.Members
	}
	return nil
}

// 流值
type StreamValue struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Entries       []*StreamValue_StreamEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamValue) Reset() {
	*x = StreamValue{}
	mi := &file_RedisResp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamValue) ProtoMessage() {}

func (x *StreamValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamValue.ProtoReflect.Descriptor instead.
func (*StreamValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{6}
}

func (x *StreamValue) GetEntries() []*StreamValue_StreamEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// 错误值
type ErrorValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorValue) Reset() {
	*x = ErrorValue{}
	mi := &file_RedisResp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorValue) ProtoMessage() {}

func (x *ErrorValue) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorValue.ProtoReflect.Descriptor instead.
func (*ErrorValue) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{7}
}

func (x *ErrorValue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 键请求
type KeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyRequest) Reset() {
	*x = KeyRequest{}
	mi := &file_RedisResp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRequest) ProtoMessage() {}

func (x *KeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRequest.ProtoReflect.Descriptor instead.
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{8}
}

func (x *KeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 键值请求
type KeyValueRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *RedisValue            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// 可选参数
	TtlMs         int64 `protobuf:"varint,3,opt,name=ttl_ms,json=ttlMs,proto3" json:"ttl_ms,omitempty"` // 过期时间（毫秒）
	Nx            bool  `protobuf:"varint,4,opt,name=nx,proto3" json:"nx,omitempty"`                    // 仅当键不存在时设置
	Xx            bool  `protobuf:"varint,5,opt,name=xx,proto3" json:"xx,omitempty"`                    // 仅当键存在时设置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValueRequest) Reset() {
	*x = KeyValueRequest{}
	mi := &file_RedisResp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueRequest) ProtoMessage() {}

func (x *KeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueRequest.ProtoReflect.Descriptor instead.
func (*KeyValueRequest) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{9}
}

func (x *KeyValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValueRequest) GetValue() *RedisValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KeyValueRequest) GetTtlMs() int64 {
	if x != nil {
		return x.TtlMs
	}
	return 0
}

func (x *KeyValueRequest) GetNx() bool {
	if x != nil {
		return x.Nx
	}
	return false
}

func (x *KeyValueRequest) GetXx() bool {
	if x != nil {
		return x.Xx
	}
	return false
}

// 响应
type RedisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *RedisValue            `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisResponse) Reset() {
	*x = RedisResponse{}
	mi := &file_RedisResp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisResponse) ProtoMessage() {}

func (x *RedisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisResponse.ProtoReflect.Descriptor instead.
func (*RedisResponse) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{10}
}

func (x *RedisResponse) GetValue() *RedisValue {
	if x != nil {
		return x.Value
	}
	return nil
}

// 哈希字段请求
type HashFieldRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Field         string                 `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Value         *string                `protobuf:"bytes,3,opt,name=value,proto3,oneof" json:"value,omitempty"` // 可选，用于设置操作
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HashFieldRequest) Reset() {
	*x = HashFieldRequest{}
	mi := &file_RedisResp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashFieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashFieldRequest) ProtoMessage() {}

func (x *HashFieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashFieldRequest.ProtoReflect.Descriptor instead.
func (*HashFieldRequest) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{11}
}

func (x *HashFieldRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HashFieldRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *HashFieldRequest) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type SortedSetValue_ScoreMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         float64                `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
	Member        string                 `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortedSetValue_ScoreMember) Reset() {
	*x = SortedSetValue_ScoreMember{}
	mi := &file_RedisResp_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortedSetValue_ScoreMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortedSetValue_ScoreMember) ProtoMessage() {}

func (x *SortedSetValue_ScoreMember) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortedSetValue_ScoreMember.ProtoReflect.Descriptor instead.
func (*SortedSetValue_ScoreMember) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SortedSetValue_ScoreMember) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SortedSetValue_ScoreMember) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

type StreamValue_StreamEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                   // 流ID，如 "1640995200000-0"
	Fields        map[string]string      `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 键值对
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamValue_StreamEntry) Reset() {
	*x = StreamValue_StreamEntry{}
	mi := &file_RedisResp_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamValue_StreamEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamValue_StreamEntry) ProtoMessage() {}

func (x *StreamValue_StreamEntry) ProtoReflect() protoreflect.Message {
	mi := &file_RedisResp_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamValue_StreamEntry.ProtoReflect.Descriptor instead.
func (*StreamValue_StreamEntry) Descriptor() ([]byte, []int) {
	return file_RedisResp_proto_rawDescGZIP(), []int{6, 0}
}

func (x *StreamValue_StreamEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamValue_StreamEntry) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

var File_RedisResp_proto protoreflect.FileDescriptor

const file_RedisResp_proto_rawDesc = "" +
	"\n" +
	"\x0fRedisResp.proto\x12\x05hddis\"\xa0\x04\n" +
	"\n" +
	"RedisValue\x127\n" +
	"\fstring_value\x18\x01 \x01(\v2\x12.hddis.StringValueH\x00R\vstringValue\x121\n" +
	"\n" +
	"list_value\x18\x02 \x01(\v2\x10.hddis.ListValueH\x00R\tlistValue\x121\n" +
	"\n" +
	"hash_value\x18\x03 \x01(\v2\x10.hddis.HashValueH\x00R\thashValue\x12.\n" +
	"\tset_value\x18\x04 \x01(\v2\x0f.hddis.SetValueH\x00R\bsetValue\x12A\n" +
	"\x10sorted_set_value\x18\x05 \x01(\v2\x15.hddis.SortedSetValueH\x00R\x0esortedSetValue\x127\n" +
	"\fstream_value\x18\x06 \x01(\v2\x12.hddis.StreamValueH\x00R\vstreamValue\x12\x1f\n" +
	"\n" +
	"null_value\x18\a \x01(\bH\x00R\tnullValue\x12\x1b\n" +
	"\bok_value\x18\b \x01(\bH\x00R\aokValue\x12%\n" +
	"\rinteger_value\x18\t \x01(\x03H\x00R\fintegerValue\x12#\n" +
	"\fdouble_value\x18\n" +
	" \x01(\x01H\x00R\vdoubleValue\x124\n" +
	"\verror_value\x18\v \x01(\v2\x11.hddis.ErrorValueH\x00R\n" +
	"errorValueB\a\n" +
	"\x05value\":\n" +
	"\vStringValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x15\n" +
	"\x06ttl_ms\x18\x02 \x01(\x03R\x05ttlMs\"#\n" +
	"\tListValue\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"|\n" +
	"\tHashValue\x124\n" +
	"\x06fields\x18\x01 \x03(\v2\x1c.hddis.HashValue.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"$\n" +
	"\bSetValue\x12\x18\n" +
	"\amembers\x18\x01 \x03(\tR\amembers\"\x8a\x01\n" +
	"\x0eSortedSetValue\x12;\n" +
	"\amembers\x18\x01 \x03(\v2!.hddis.SortedSetValue.ScoreMemberR\amembers\x1a;\n" +
	"\vScoreMember\x12\x14\n" +
	"\x05score\x18\x01 \x01(\x01R\x05score\x12\x16\n" +
	"\x06member\x18\x02 \x01(\tR\x06member\"\xe6\x01\n" +
	"\vStreamValue\x128\n" +
	"\aentries\x18\x01 \x03(\v2\x1e.hddis.StreamValue.StreamEntryR\aentries\x1a\x9c\x01\n" +
	"\vStreamEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12B\n" +
	"\x06fields\x18\x02 \x03(\v2*.hddis.StreamValue.StreamEntry.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"&\n" +
	"\n" +
	"ErrorValue\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x1e\n" +
	"\n" +
	"KeyRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"\x83\x01\n" +
	"\x0fKeyValueRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.hddis.RedisValueR\x05value\x12\x15\n" +
	"\x06ttl_ms\x18\x03 \x01(\x03R\x05ttlMs\x12\x0e\n" +
	"\x02nx\x18\x04 \x01(\bR\x02nx\x12\x0e\n" +
	"\x02xx\x18\x05 \x01(\bR\x02xx\"8\n" +
	"\rRedisResponse\x12'\n" +
	"\x05value\x18\x01 \x01(\v2\x11.hddis.RedisValueR\x05value\"_\n" +
	"\x10HashFieldRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05field\x18\x02 \x01(\tR\x05field\x12\x19\n" +
	"\x05value\x18\x03 \x01(\tH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value2\xee\x03\n" +
	"\x10RedisRespService\x12.\n" +
	"\x03Get\x12\x11.hddis.KeyRequest\x1a\x14.hddis.RedisResponse\x123\n" +
	"\x03Set\x12\x16.hddis.KeyValueRequest\x1a\x14.hddis.RedisResponse\x125\n" +
	"\x04HGet\x12\x17.hddis.HashFieldRequest\x1a\x14.hddis.RedisResponse\x125\n" +
	"\x04HSet\x12\x17.hddis.HashFieldRequest\x1a\x14.hddis.RedisResponse\x122\n" +
	"\aHGetAll\x12\x11.hddis.KeyRequest\x1a\x14.hddis.RedisResponse\x125\n" +
	"\x05LPush\x12\x16.hddis.KeyValueRequest\x1a\x14.hddis.RedisResponse\x121\n" +
	"\x06LRange\x12\x11.hddis.KeyRequest\x1a\x14.hddis.RedisResponse\x124\n" +
	"\x04SAdd\x12\x16.hddis.KeyValueRequest\x1a\x14.hddis.RedisResponse\x123\n" +
	"\bSMembers\x12\x11.hddis.KeyRequest\x1a\x14.hddis.RedisResponseB\x1bZ\bhddis/pb\xaa\x02\x0eHddis.DataNodeb\x06proto3"

var (
	file_RedisResp_proto_rawDescOnce sync.Once
	file_RedisResp_proto_rawDescData []byte
)

func file_RedisResp_proto_rawDescGZIP() []byte {
	file_RedisResp_proto_rawDescOnce.Do(func() {
		file_RedisResp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_RedisResp_proto_rawDesc), len(file_RedisResp_proto_rawDesc)))
	})
	return file_RedisResp_proto_rawDescData
}

var file_RedisResp_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_RedisResp_proto_goTypes = []any{
	(*RedisValue)(nil),                 // 0: hddis.RedisValue
	(*StringValue)(nil),                // 1: hddis.StringValue
	(*ListValue)(nil),                  // 2: hddis.ListValue
	(*HashValue)(nil),                  // 3: hddis.HashValue
	(*SetValue)(nil),                   // 4: hddis.SetValue
	(*SortedSetValue)(nil),             // 5: hddis.SortedSetValue
	(*StreamValue)(nil),                // 6: hddis.StreamValue
	(*ErrorValue)(nil),                 // 7: hddis.ErrorValue
	(*KeyRequest)(nil),                 // 8: hddis.KeyRequest
	(*KeyValueRequest)(nil),            // 9: hddis.KeyValueRequest
	(*RedisResponse)(nil),              // 10: hddis.RedisResponse
	(*HashFieldRequest)(nil),           // 11: hddis.HashFieldRequest
	nil,                                // 12: hddis.HashValue.FieldsEntry
	(*SortedSetValue_ScoreMember)(nil), // 13: hddis.SortedSetValue.ScoreMember
	(*StreamValue_StreamEntry)(nil),    // 14: hddis.StreamValue.StreamEntry
	nil,                                // 15: hddis.StreamValue.StreamEntry.FieldsEntry
}
var file_RedisResp_proto_depIdxs = []int32{
	1,  // 0: hddis.RedisValue.string_value:type_name -> hddis.StringValue
	2,  // 1: hddis.RedisValue.list_value:type_name -> hddis.ListValue
	3,  // 2: hddis.RedisValue.hash_value:type_name -> hddis.HashValue
	4,  // 3: hddis.RedisValue.set_value:type_name -> hddis.SetValue
	5,  // 4: hddis.RedisValue.sorted_set_value:type_name -> hddis.SortedSetValue
	6,  // 5: hddis.RedisValue.stream_value:type_name -> hddis.StreamValue
	7,  // 6: hddis.RedisValue.error_value:type_name -> hddis.ErrorValue
	12, // 7: hddis.HashValue.fields:type_name -> hddis.HashValue.FieldsEntry
	13, // 8: hddis.SortedSetValue.members:type_name -> hddis.SortedSetValue.ScoreMember
	14, // 9: hddis.StreamValue.entries:type_name -> hddis.StreamValue.StreamEntry
	0,  // 10: hddis.KeyValueRequest.value:type_name -> hddis.RedisValue
	0,  // 11: hddis.RedisResponse.value:type_name -> hddis.RedisValue
	15, // 12: hddis.StreamValue.StreamEntry.fields:type_name -> hddis.StreamValue.StreamEntry.FieldsEntry
	8,  // 13: hddis.RedisRespService.Get:input_type -> hddis.KeyRequest
	9,  // 14: hddis.RedisRespService.Set:input_type -> hddis.KeyValueRequest
	11, // 15: hddis.RedisRespService.HGet:input_type -> hddis.HashFieldRequest
	11, // 16: hddis.RedisRespService.HSet:input_type -> hddis.HashFieldRequest
	8,  // 17: hddis.RedisRespService.HGetAll:input_type -> hddis.KeyRequest
	9,  // 18: hddis.RedisRespService.LPush:input_type -> hddis.KeyValueRequest
	8,  // 19: hddis.RedisRespService.LRange:input_type -> hddis.KeyRequest
	9,  // 20: hddis.RedisRespService.SAdd:input_type -> hddis.KeyValueRequest
	8,  // 21: hddis.RedisRespService.SMembers:input_type -> hddis.KeyRequest
	10, // 22: hddis.RedisRespService.Get:output_type -> hddis.RedisResponse
	10, // 23: hddis.RedisRespService.Set:output_type -> hddis.RedisResponse
	10, // 24: hddis.RedisRespService.HGet:output_type -> hddis.RedisResponse
	10, // 25: hddis.RedisRespService.HSet:output_type -> hddis.RedisResponse
	10, // 26: hddis.RedisRespService.HGetAll:output_type -> hddis.RedisResponse
	10, // 27: hddis.RedisRespService.LPush:output_type -> hddis.RedisResponse
	10, // 28: hddis.RedisRespService.LRange:output_type -> hddis.RedisResponse
	10, // 29: hddis.RedisRespService.SAdd:output_type -> hddis.RedisResponse
	10, // 30: hddis.RedisRespService.SMembers:output_type -> hddis.RedisResponse
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_RedisResp_proto_init() }
func file_RedisResp_proto_init() {
	if File_RedisResp_proto != nil {
		return
	}
	file_RedisResp_proto_msgTypes[0].OneofWrappers = []any{
		(*RedisValue_StringValue)(nil),
		(*RedisValue_ListValue)(nil),
		(*RedisValue_HashValue)(nil),
		(*RedisValue_SetValue)(nil),
		(*RedisValue_SortedSetValue)(nil),
		(*RedisValue_StreamValue)(nil),
		(*RedisValue_NullValue)(nil),
		(*RedisValue_OkValue)(nil),
		(*RedisValue_IntegerValue)(nil),
		(*RedisValue_DoubleValue)(nil),
		(*RedisValue_ErrorValue)(nil),
	}
	file_RedisResp_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_RedisResp_proto_rawDesc), len(file_RedisResp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_RedisResp_proto_goTypes,
		DependencyIndexes: file_RedisResp_proto_depIdxs,
		MessageInfos:      file_RedisResp_proto_msgTypes,
	}.Build()
	File_RedisResp_proto = out.File
	file_RedisResp_proto_goTypes = nil
	file_RedisResp_proto_depIdxs = nil
}
